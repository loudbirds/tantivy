initSidebarItems({"enum":[["ErrorKind","The kind of error that can be produced during a serialization or deserialization."]],"fn":[["deserialize","Deserializes a slice of bytes into an object."],["deserialize_from","Deserializes an object directly from a `Buffer`ed Reader."],["serialize","Serializes a serializable object into a `Vec` of bytes."],["serialize_into","Serializes an object directly into a `Writer`."],["serialized_size","Returns the size that an object would be if serialized using bincode."],["serialized_size_bounded","Given a maximum size limit, check how large an object would be if it were to be serialized."]],"mod":[["endian_choice","All of the core bincode functions and types with the ability to choose endianness."]],"struct":[["Bounded","A SizeLimit that restricts serialized or deserialized messages from exceeding a certain byte length."],["Infinite","A SizeLimit without a limit! Use this if you don't care about the size of encoded or decoded messages."]],"trait":[["SizeLimit","A limit on the amount of bytes that can be read or written."]],"type":[["Deserializer","A Deserializer that uses LittleEndian byteorder"],["Error","An error that can be produced during (de)serializing."],["Result","The result of a serialization or deserialization operation."],["Serializer","A Serializer that uses LittleEndian byteorder"]]});